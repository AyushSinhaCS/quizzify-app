{"ast":null,"code":"var _jsxFileName = \"/Users/ayushsinha/Desktop/quizzify/frontend/src/pages/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        const {\n          data\n        } = await axios.get(`${process.env.REACT_APP_API_URL}/api/quizzes/${id}`, config);\n        setQuiz(data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load quiz.');\n        setLoading(false);\n      }\n    };\n    if (user !== null && user !== void 0 && user.token) {\n      fetchQuiz();\n    }\n  }, [id, user === null || user === void 0 ? void 0 : user.token]);\n  const handleAnswerSelect = option => {\n    setSelectedAnswer(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === quiz.questions[currentQuestionIndex].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer(null);\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10\",\n    children: \"Loading Quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-10 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  if (!quiz) return null;\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-10 p-8 bg-white dark:bg-gray-800 rounded-lg shadow-lg max-w-lg mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl mb-6\",\n        children: [\"Your final score is: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-purple-600\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 66\n        }, this), \" out of \", quiz.questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/dashboard'),\n        className: \"w-full py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  const optionLetters = ['A', 'B', 'C', 'D'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto mt-10 p-8 border rounded-lg shadow-lg bg-white dark:bg-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-2\",\n      children: quiz.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6 text-gray-600 dark:text-gray-400\",\n      children: [\"Question \", currentQuestionIndex + 1, \" of \", quiz.questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-semibold\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerSelect(optionLetters[index]),\n        className: `w-full text-left p-4 rounded-lg border-2 transition-colors ${selectedAnswer === optionLetters[index] ? 'bg-purple-200 border-purple-500 dark:bg-purple-900' : 'bg-gray-100 border-gray-200 hover:bg-gray-200 dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold mr-2\",\n          children: [optionLetters[index], \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), \" \", option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextQuestion,\n      disabled: !selectedAnswer,\n      className: \"w-full mt-8 py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:bg-purple-300\",\n      children: currentQuestionIndex < quiz.questions.length - 1 ? 'Next Question' : 'Finish Quiz'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizPage, \"08HgfqUydTEVH7FQP/EJBw1CeQY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","QuizPage","_s","id","navigate","quiz","setQuiz","loading","setLoading","error","setError","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","selectedAnswer","setSelectedAnswer","showResult","setShowResult","user","fetchQuiz","config","headers","Authorization","token","data","get","process","env","REACT_APP_API_URL","err","handleAnswerSelect","option","handleNextQuestion","questions","correctAnswer","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentQuestion","optionLetters","title","question","options","map","index","disabled","_c","$RefreshReg$"],"sources":["/Users/ayushsinha/Desktop/quizzify/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../context/AuthContext';\n\nconst QuizPage = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [quiz, setQuiz] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n    const [showResult, setShowResult] = useState(false);\n\n    const { user } = useContext(AuthContext);\n\n    useEffect(() => {\n        const fetchQuiz = async () => {\n            try {\n                const config = {\n                    headers: {\n                        Authorization: `Bearer ${user.token}`,\n                    },\n                };\n                const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/api/quizzes/${id}`, config);\n                setQuiz(data);\n                setLoading(false);\n            } catch (err) {\n                setError('Failed to load quiz.');\n                setLoading(false);\n            }\n        };\n        if (user?.token) {\n            fetchQuiz();\n        }\n    }, [id, user?.token]);\n\n    const handleAnswerSelect = (option) => {\n        setSelectedAnswer(option);\n    };\n    \n    const handleNextQuestion = () => {\n        if (selectedAnswer === quiz.questions[currentQuestionIndex].correctAnswer) {\n            setScore(score + 1);\n        }\n\n        setSelectedAnswer(null);\n\n        if (currentQuestionIndex < quiz.questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n        } else {\n            setShowResult(true);\n        }\n    };\n\n    if (loading) return <div className=\"text-center mt-10\">Loading Quiz...</div>;\n    if (error) return <div className=\"text-center mt-10 text-red-500\">{error}</div>;\n    if (!quiz) return null;\n\n    if (showResult) {\n        return (\n            <div className=\"text-center mt-10 p-8 bg-white dark:bg-gray-800 rounded-lg shadow-lg max-w-lg mx-auto\">\n                <h2 className=\"text-3xl font-bold mb-4\">Quiz Completed!</h2>\n                <p className=\"text-xl mb-6\">Your final score is: <span className=\"font-bold text-purple-600\">{score}</span> out of {quiz.questions.length}</p>\n                <button\n                    onClick={() => navigate('/dashboard')}\n                    className=\"w-full py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700\"\n                >\n                    Back to Dashboard\n                </button>\n            </div>\n        )\n    }\n\n    const currentQuestion = quiz.questions[currentQuestionIndex];\n    const optionLetters = ['A', 'B', 'C', 'D'];\n\n    return (\n        <div className=\"max-w-2xl mx-auto mt-10 p-8 border rounded-lg shadow-lg bg-white dark:bg-gray-800\">\n            <h2 className=\"text-2xl font-bold mb-2\">{quiz.title}</h2>\n            <p className=\"mb-6 text-gray-600 dark:text-gray-400\">Question {currentQuestionIndex + 1} of {quiz.questions.length}</p>\n            \n            <div className=\"mb-6\">\n                <p className=\"text-lg font-semibold\">{currentQuestion.question}</p>\n            </div>\n\n            <div className=\"space-y-4\">\n                {currentQuestion.options.map((option, index) => (\n                    <button\n                        key={index}\n                        onClick={() => handleAnswerSelect(optionLetters[index])}\n                        className={`w-full text-left p-4 rounded-lg border-2 transition-colors ${selectedAnswer === optionLetters[index] ? 'bg-purple-200 border-purple-500 dark:bg-purple-900' : 'bg-gray-100 border-gray-200 hover:bg-gray-200 dark:bg-gray-700 dark:border-gray-600 dark:hover:bg-gray-600'}`}\n                    >\n                        <span className=\"font-bold mr-2\">{optionLetters[index]}.</span> {option}\n                    </button>\n                ))}\n            </div>\n\n            <button\n                onClick={handleNextQuestion}\n                disabled={!selectedAnswer}\n                className=\"w-full mt-8 py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:bg-purple-300\"\n            >\n                {currentQuestionIndex < quiz.questions.length - 1 ? 'Next Question' : 'Finish Quiz'}\n            </button>\n        </div>\n    );\n};\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}